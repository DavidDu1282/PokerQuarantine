{"version":3,"sources":["views/Navigator/Navigator.scss","views/LoginPanel/LoginPanel.scss","views/UserInfoPanel/UserInfoPanel.scss","global.scss","views/NewsPanel/NewsPanel.js","views/LeaderBoardPanel/LeaderBoardPanel.js","components/DarkContainer/DarkContainer.js","components/LightContainer/LightContainer.js","components/QuickForm/QuickForm.js","components/Spacing/Spacing.js","components/GoogleIcon/GoogleIcon.js","views/Navigator/Navigator.js","views/LoginPanel/LoginPanel.js","views/UserInfoPanel/UserInfoPanel.js","views/MatchPanel/MatchCard.js","views/MatchPanel/MatchPanel.js","views/StorePanel/StoreCard.js","views/StorePanel/StorePanel.js","models/User.js","theme.js","App.js","index.js","config.scss"],"names":["module","exports","NewsPanel","data","update","date","description","className","Grid","container","direction","justify","alignItems","style","flexWrap","spacing","item","Typography","variant","CardMedia","src","component","height","title","map","elem","xs","key","indexOf","Card","width","CardHeader","subheader","CardContent","color","CardActions","Button","size","createData","name","username","chips","sortedData","sort","a","b","LeaderBoardPanel","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","row","scope","useStyles","makeStyles","root","backgroundColor","DarkContainer","props","classes","Paper","elevation","children","LightContainer","QuickForm","field_values","error_states","Object","entries","fields","field_name","type","moment","state","error_states_","assign","this","setState","value","field_values_","setErrorState","e","target","getAttribute","setValue","checked","preventDefault","checkEmpty","form","body","tBoxVariant","button","onSubmit","others","fields_display","options","push","FormControlLabel","control","Checkbox","onChange","handleChange","label","FormHelperText","error","utils","MomentUtils","DatePicker","disableFuture","fullWidth","inputVariant","format","margin","handleDateChange","helperText","TextField","noValidate","handleSubmit","React","Component","Spacing","lineHeight","GoogleIcon","SvgIcon","viewBox","d","fill","TabPanel","index","other","role","hidden","id","aria-labelledby","Fragment","GreyTextTab","withStyles","theme","styles","grey","disabled","display","Tab","Navigator","tabs","keys","list","panes","values","client","user","display_setting","selectedTab","new_display","tab","newValue","forEach","borderRadius","alt","Tabs","orientation","event","setSelectedTab","textColor","indicatorColor","raw_type","padding","alignSelf","marginTop","ButtonBase","disableRipple","disableTouchRipple","onClick","Avatar","avatar_url","marginLeft","IconButton","logout","ExitToApp","LoginPanel","login_form","createRef","register_form","page_index","result","password","auth","current","message","email","dob","re_password","tnc","email_regrex","match","isAfter","subtract","handleLogin","onLogin","handleRegister","onRegister","login_page","alignContent","Link","href","ref","startIcon","register_page","UserInfoPanel","balance","wins","losses","games_played","maxWidth","maxHeight","media","MatchCard","useState","amounttobet","CardActionArea","matchCard","image","gutterBottom","short_description","Box","justifyContent","p","bgcolor","alert","MatchPanel","amount","float","sm","md","StoreCard","storeCard","StorePanel","console","log","user_types","0","1","display_array","9","User","userdata","authdata","axios","post","then","res","user_new","catch","err","Error","toDate","get","Theme","createMuiTheme","palette","primary","teal","secondary","pink","background","default","App","navigator","create","logged_user","login","setDisplay","empty_user","ThemeProvider","CssBaseline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc303ad5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grey\":\"#a8a8a8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grey\":\"#a8a8a8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grey\":\"#a8a8a8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grey\":\"#a8a8a8\"};","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Typography } from '@material-ui/core';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\n// import tileData from './tileData';\r\n\r\nexport default function NewsPanel() {\r\n  const data = [\r\n      { update: 1, date: '07.07.2020', description: 'Insert short description here' },\r\n      { update: 2, date: '07.08.2020', description: 'Insert short description here'  },\r\n      { update: 3, date: '07.13.2020', description: 'Insert short description here' },\r\n      { update: 4, date: '07.24.2020', description: 'Insert short description here'  }\r\n  ]\r\n\r\n  return (\r\n      \r\n      \r\n    <div className=\"container-padded\">\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n        style={{flexWrap: \"nowrap\"}}\r\n        spacing={4}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h4\">News</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <CardMedia src={'/Poker.jpg'} component=\"img\" height=\"400\" title=\"Some title\" />\r\n        </Grid>\r\n\r\n\r\n        <Grid item container spacing={2}>\r\n          {data.map(elem => (\r\n            <Grid item xs={12} key={data.indexOf(elem)}>\r\n              <Card width=\"100%\">\r\n                <CardHeader\r\n                  title={`Update ${elem.update}`}\r\n                  subheader={`${elem.date}`}    \r\n                />\r\n                <CardContent>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    {`${elem.description}`}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button size=\"small\" color=\"primary\">\r\n                    Share\r\n                  </Button>\r\n                  <Button size=\"small\" color=\"primary\">\r\n                    Learn More\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n\r\n\r\n      </Grid>\r\n    </div>\r\n    \r\n          \r\n    \r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nfunction createData(name, username, chips) {\r\n  return { name, username, chips};\r\n}\r\n\r\nconst data = [\r\n  createData('Jason', 'poker123', 300),\r\n  createData('Marian', 'marmar', 5000),\r\n  createData('John', 'jayjay1', 20),\r\n  createData('Emily', 'emlee', 100),\r\n];\r\n\r\nconst sortedData = data.sort((a, b) => b.chips - a.chips);\r\n\r\nexport default function LeaderBoardPanel() {\r\n  return (\r\n    <div className=\"container-padded\">\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"stretch\"\r\n        style={{flexWrap: \"nowrap\"}}\r\n        spacing={4}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h4\">Leaderboard</Typography>\r\n        </Grid>\r\n\r\n        <Grid item>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell><b>Name</b></TableCell>\r\n                <TableCell align=\"left\"><b>Username</b></TableCell>\r\n                <TableCell align=\"right\"><b>Chips</b></TableCell>\r\n\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {sortedData.map((row) => (\r\n                <TableRow key={row.name}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.name}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{row.username}</TableCell>\r\n                  <TableCell align=\"right\">{row.chips}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n           \r\n  );\r\n}\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: '#000000',\r\n    height: \"100%\"\r\n  }\r\n});\r\n\r\nexport default function DarkContainer(props) {\r\n  /* A dark variant of the <Paper> component*/\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper\r\n      classes={{root: classes.root}}\r\n      elevation={1 | props.elevation}\r\n      style={props.style}\r\n    >\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: '#FFFFFF',\r\n    height: \"100%\"\r\n\r\n  }\r\n});\r\n\r\nexport default function LightContainer(props) {\r\n  /* A light variant of the <Paper> component*/\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper\r\n      classes={{root: classes.root}}\r\n      className=\"scroll-container\"\r\n      elevation={1 | props.elevation}\r\n      style={props.style}\r\n    >\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {\r\n  TextField,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  Grid,\r\n  Button,\r\n  Typography,\r\n  Checkbox\r\n} from '@material-ui/core';\r\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport moment from 'moment';\r\n\r\nclass QuickForm extends React.Component {\r\n  /**\r\n   * Builds a simple form from object\r\n   * const { fields, variant, button, onSubmit, name, ...others } = props;\r\n   * onSubmit = onSubmit(result)\r\n   * fields = {'name': {\r\n   *          label: 'label' ,\r\n   *          type: 'text' | 'password' | 'number' | 'date' | 'checkbox'\r\n   * }}\r\n   */\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const field_values = {};\r\n    const error_states = {};\r\n\r\n    for (const [field_name, options] of Object.entries(this.props.fields)) {\r\n      switch (options.type) {\r\n        case 'checkbox':\r\n          field_values[field_name] = false;\r\n          error_states[field_name] = '';\r\n          break;\r\n        case 'date':\r\n          error_states[field_name] = '';\r\n          let date = moment();\r\n          field_values[field_name] = date;\r\n          break;\r\n        default:\r\n          error_states[field_name] = '';\r\n          field_values[field_name] = '';\r\n      }\r\n    }\r\n\r\n    this.state = {\r\n      field_values: field_values,\r\n      error_states: error_states\r\n    };\r\n  }\r\n\r\n  setErrorState(name, state) {\r\n    const error_states_ = Object.assign({}, this.state.error_states);\r\n    error_states_[name] = state;\r\n\r\n    this.setState((state) => {\r\n      return { \r\n        error_states: error_states_\r\n      };\r\n    })\r\n  }\r\n\r\n  setValue(name, value) {\r\n    const field_values_ = Object.assign({}, this.state.field_values);\r\n    field_values_[name] = value;\r\n\r\n    this.setState((state) => {\r\n      return { \r\n        field_values: field_values_\r\n      };\r\n    })\r\n  }\r\n\r\n  checkEmpty(data) {\r\n    /**\r\n     * Check if any field in the given data obj is empty\r\n     * returns true if one field is empty, false otherwise\r\n     * Set error state to empty if found\r\n     */\r\n\r\n    for (const [key, value] of Object.entries(data)) {\r\n      if (value === '') {\r\n        this.setErrorState(key, `This field must not be empty.`);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  handleChange(e) {\r\n    /**\r\n     * Update field values, check for error\r\n     */\r\n\r\n    let name = e.target.getAttribute('name');\r\n    let type = e.target.getAttribute('type');\r\n    if (type === 'checkbox') {\r\n\r\n      this.setValue(name, e.target.checked);\r\n    } else {\r\n      this.setValue(name, e.target.value);\r\n    }\r\n\r\n    // errors\r\n    if ( type !== 'checkbox' && e.target.value === '') {\r\n      this.setErrorState(name, `This field must not be empty.`);\r\n    } else {\r\n      this.setErrorState(name, '');\r\n    }\r\n  }\r\n\r\n  handleDateChange(name, date) {\r\n    /**\r\n     * Update date\r\n     */\r\n\r\n    this.setValue(name, date);\r\n    this.setErrorState(name, '');\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    /**\r\n     * returns the data of this form\r\n     * return null if error\r\n     */\r\n\r\n    e.preventDefault();\r\n\r\n    if (this.checkEmpty(this.state.field_values)) {\r\n      return null;\r\n    }\r\n\r\n    return {\r\n      form: this,\r\n      body: this.state.field_values\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { fields, tBoxVariant, button, onSubmit, name, ...others } = this.props;\r\n    const fields_display = [];\r\n\r\n    // construct form\r\n    for (const [field_name, options] of Object.entries(fields)) {\r\n\r\n      switch (options.type) {\r\n        case 'checkbox':\r\n          fields_display.push(\r\n            <Grid item xs key={field_name}>\r\n              <FormControlLabel \r\n                control={<Checkbox\r\n                  name={field_name}\r\n                  checked={this.state.field_values[field_name]}\r\n                  onChange={e => this.handleChange(e)}  \r\n                  color=\"primary\"\r\n                  size=\"small\"\r\n                />}\r\n                label={<Typography variant=\"body2\">{options.label}</Typography>}\r\n              /><br/>\r\n              <FormHelperText\r\n                variant={tBoxVariant}\r\n                error={(this.state.error_states[field_name] === '') ? false : true}\r\n              >\r\n                {this.state.error_states[field_name]}\r\n              </FormHelperText>\r\n            </Grid>\r\n          );\r\n          break;\r\n        case 'date':\r\n          fields_display.push(\r\n            <Grid item xs key={field_name}>\r\n            <MuiPickersUtilsProvider utils={MomentUtils}>\r\n              <DatePicker\r\n                disableFuture\r\n                fullWidth\r\n                name={field_name}\r\n                variant=\"inline\"\r\n                inputVariant={tBoxVariant}\r\n                format=\"MMMM DD, yyyy\"\r\n                margin=\"normal\"\r\n                label={options.label}\r\n                value={this.state.field_values[field_name]}\r\n                onChange={(date) => this.handleDateChange(field_name, date)}\r\n                error={(this.state.error_states[field_name] === '') ? false : true}\r\n                helperText={this.state.error_states[field_name]}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n            </Grid>\r\n          )\r\n          break;\r\n        default:\r\n          fields_display.push(\r\n            <Grid item xs key={field_name}>\r\n              <TextField \r\n                label={options.label}\r\n                name={field_name}\r\n                variant={tBoxVariant}\r\n                type={options.type}\r\n                value={this.state.field_values[field_name]}\r\n                error={(this.state.error_states[field_name] === '') ? false : true}\r\n                helperText={this.state.error_states[field_name]}\r\n                margin=\"normal\"\r\n                onChange={(e) => this.handleChange(e)}\r\n                fullWidth\r\n              />\r\n            </Grid>\r\n          );\r\n      }\r\n\r\n    }\r\n\r\n    // button row\r\n\r\n    if (typeof(button) === typeof('')) {\r\n      // string button\r\n      fields_display.push(\r\n        <Grid item xs key=\"button\">\r\n          <Button type=\"submit\" fullWidth>{button}</Button>\r\n        </Grid>\r\n      );\r\n    } else {\r\n      // node button(row)\r\n      fields_display.push(button);\r\n    };\r\n\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        spacing={0}\r\n        {...others}\r\n      >\r\n        <form noValidate onSubmit={e => onSubmit(this.handleSubmit(e))}>\r\n          {fields_display}\r\n        </form>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuickForm;","import React from 'react';\r\n\r\n\r\nexport default function Spacing(props) {\r\n  /* vertical spacing with custom height */\r\n\r\n  return (\r\n    <span style={{lineHeight: `${props.height}rem` }}>‎‏‏‎ ‎</span>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { SvgIcon } from \"@material-ui/core\";\r\n\r\nexport default function GoogleIcon(props) {\r\n  return (\r\n    <SvgIcon viewBox=\"0 0 550 550\" {...props}>\r\n      <path d=\"M533.5 278.4c0-18.5-1.5-37.1-4.7-55.3H272.1v104.8h147c-6.1 33.8-25.7 63.7-54.4 82.7v68h87.7c51.5-47.4 81.1-117.4 81.1-200.2z\" fill=\"#4285f4\"/><path d=\"M272.1 544.3c73.4 0 135.3-24.1 180.4-65.7l-87.7-68c-24.4 16.6-55.9 26-92.6 26-71 0-131.2-47.9-152.8-112.3H28.9v70.1c46.2 91.9 140.3 149.9 243.2 149.9z\" fill=\"#34a853\"/><path d=\"M119.3 324.3c-11.4-33.8-11.4-70.4 0-104.2V150H28.9c-38.6 76.9-38.6 167.5 0 244.4l90.4-70.1z\" fill=\"#fbbc04\"/><path d=\"M272.1 107.7c38.8-.6 76.3 14 104.4 40.8l77.7-77.7C405 24.6 339.7-.8 272.1 0 169.2 0 75.1 58 28.9 150l90.4 70.1c21.5-64.5 81.8-112.4 152.8-112.4z\" fill=\"#ea4335\"/>\r\n    </SvgIcon>\r\n  );\r\n}","import React from 'react';\r\nimport { DarkContainer, LightContainer } from '../../components';\r\nimport { Tab, Tabs, withStyles, ButtonBase, Grid, Typography, IconButton, Avatar } from '@material-ui/core';\r\nimport { ExitToApp } from '@material-ui/icons';\r\nimport './Navigator.scss';\r\nimport styles from './../../config.scss';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (<React.Fragment>{children}</React.Fragment>)}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst GreyTextTab = withStyles((theme) => ({\r\n  root: {\r\n    color: styles.grey\r\n  },\r\n  disabled: {\r\n    display: \"none\"\r\n  }\r\n}))((props) => <Tab {...props} />);\r\n\r\n\r\nclass Navigator extends React.Component {\r\n  /**\r\n   * The panel player sees when they enter the website\r\n   * basically a styled navigator\r\n   * props: user=User\r\n   */\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let tabs = Object.keys(this.props.list);\r\n    let panes = Object.values(this.props.list);\r\n    let display = this.props.client.user.display_setting;\r\n\r\n    this.state = {\r\n      tabs: tabs,\r\n      panes: panes,\r\n      selectedTab: 0,\r\n      display: display\r\n    };\r\n  }\r\n\r\n  setDisplay(new_display, tab) {\r\n    /**\r\n     * Sets the display status to new_display\r\n     * Expects a Map with the same keys as the nav's listing \r\n     */\r\n\r\n    if (process.env.NODE_ENV === 'development') {\r\n      // assert if arrays have similar length\r\n      \r\n      if (new_display.length !== this.state.display.length) {\r\n        throw new Error('new_display is in a different length');\r\n      }\r\n    }\r\n\r\n    this.setState((state) => {\r\n      return {\r\n        display: new_display,\r\n        selectedTab: tab\r\n      };\r\n    });\r\n  }\r\n\r\n  setSelectedTab(newValue) {\r\n    this.setState((state) => {\r\n      return { selectedTab: newValue };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const tabs = [];\r\n    const panes = [];\r\n\r\n    const handleChange = (event, newValue) => {\r\n      this.setSelectedTab(newValue);\r\n    };\r\n\r\n    this.state.display.forEach((item, index) => {\r\n      tabs.push(<GreyTextTab label={this.state.tabs[index]} key={index} disabled={!item}/>);\r\n      panes.push(<TabPanel value={this.state.selectedTab} index={index} key={index}>{this.state.panes[index]}</TabPanel>);\r\n    })\r\n\r\n    return (\r\n      <div className=\"panelContainer main\">\r\n\r\n        <div className=\"panelContainer left\">\r\n        <DarkContainer style={{borderRadius: \"4px 0 0 4px\"}}>\r\n          <div className=\"nav-content\">\r\n            <img src={'/Logo-withText-dark.png'} style={{width: \"90%\", margin: \"1em auto\"}} alt=\"logo\" />\r\n\r\n            <Tabs\r\n              orientation=\"vertical\"\r\n              value={this.state.selectedTab}\r\n              onChange={handleChange}\r\n              textColor=\"primary\"\r\n              variant='fullWidth'\r\n              indicatorColor=\"secondary\"\r\n            >\r\n              {tabs}\r\n            </Tabs>\r\n\r\n            {this.props.client.user.raw_type !== 9 && (\r\n              <Grid\r\n                container\r\n                style={{padding: \"0.8em 1em\", alignSelf: \"flex-end\", marginTop: \"auto\"}}\r\n                alignItems=\"center\"\r\n                spacing={0}\r\n              >\r\n                <Grid item xs={10}>\r\n                  <ButtonBase\r\n                    disableRipple\r\n                    disableTouchRipple\r\n                    onClick={e => this.setSelectedTab(6)}\r\n                  >\r\n                    <Avatar src={this.props.client.user.avatar_url} alt={this.props.client.user.name}/>\r\n                    <Typography style={{color: \"white\", marginLeft: \"0.8em\"}} variant=\"body2\">{this.props.client.user.name}</Typography>\r\n                  </ButtonBase>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                  <IconButton size=\"small\" onClick={e => this.props.client.logout()}>\r\n                    <ExitToApp color=\"secondary\"/>\r\n                  </IconButton>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n          </div>\r\n\r\n        </DarkContainer>\r\n        </div>\r\n\r\n        <div className=\"panelContainer right\">\r\n        <LightContainer style={{borderRadius: \"0 4px 4px 0\"}}>\r\n          {panes}\r\n        </LightContainer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigator;","import React from 'react';\r\nimport { \r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  Link\r\n} from '@material-ui/core';\r\nimport { Spacing, GoogleIcon, QuickForm } from '../../components';\r\nimport moment from 'moment';\r\nimport './LoginPanel.scss';\r\n\r\nclass LoginPanel extends React.Component {\r\n  /**\r\n   * The login panel\r\n   */\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.login_form = React.createRef();\r\n    this.register_form = React.createRef();\r\n    this.state = {\r\n      page_index: 0\r\n    }\r\n  }\r\n\r\n  // event handlers\r\n\r\n  async onLogin(result) {\r\n    // if error\r\n    if (!result) return;\r\n\r\n    const data = {\r\n      username: result.body.username,\r\n      password: result.body.password\r\n    };\r\n\r\n    try {\r\n      await this.props.client.auth(data);\r\n    } catch (err) {\r\n      this.login_form.current.setErrorState(\"password\", err.message);\r\n      return;\r\n    }\r\n    \r\n    // alert(JSON.stringify(result.body));\r\n  }\r\n\r\n  async onRegister(result) {\r\n    // if error\r\n    if (!result) return;\r\n\r\n    const { username, email, dob, password, re_password, tnc } = result.body;\r\n    let email_regrex = /(\\w+@\\w+\\.\\w+)/g;\r\n\r\n\r\n    // detect formatting errors\r\n    if (password !== re_password) {\r\n      this.register_form.current.setErrorState('re_password', `Passwords do not match.`);\r\n      return;\r\n    } else if (!email.match(email_regrex)) {\r\n      this.register_form.current.setErrorState('email', 'Please enter a valid email.');\r\n      return;\r\n    } else if (dob.isAfter(moment().subtract(19, 'years'))) {\r\n      this.register_form.current.setErrorState('dob', 'You must be 19 or older to register.');\r\n      return;\r\n    } else if (!tnc) {\r\n      this.register_form.current.setErrorState('tnc', 'Please agree to the terms and conditions.');\r\n      return;\r\n    } \r\n\r\n    const data = {\r\n      username: username,\r\n      email: email,\r\n      dob: dob,\r\n      password: password\r\n    };\r\n\r\n    try {\r\n      await this.props.client.auth(data, true);\r\n    } catch (err) {\r\n      switch (err.message) {\r\n        case 'username-duplicate':\r\n          this.register_form.current.setErrorState('username', 'Username already exists.');\r\n          break;\r\n        case 'email-duplicate':\r\n          this.register_form.current.setErrorState('email', 'Email has been registered with an existing account.');\r\n          break;\r\n        default:\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const handleLogin = async (result) => {\r\n      await this.onLogin(result);\r\n    };\r\n    const handleRegister = async (result) => {\r\n      await this.onRegister(result);\r\n    };\r\n\r\n    const login_page = (\r\n      <Grid\r\n        container\r\n        alignItems=\"flex-start\"\r\n        alignContent=\"center\"\r\n        justify=\"center\"\r\n        direction=\"column\"\r\n        spacing={1}\r\n      >\r\n        <Grid item xs><Typography variant=\"h5\">Welcome Back</Typography></Grid>\r\n        <Grid item xs><Typography variant=\"body2\" color=\"textSecondary\">\r\n          Login with your PokerQuarantine account.\r\n        </Typography></Grid>\r\n        <Grid item xs><Spacing height={1}/></Grid>\r\n        <QuickForm \r\n          fields={{\r\n            \"username\": {\r\n              label: \"Username / Email\",\r\n              type: \"text\" },\r\n            \"password\": {\r\n              label: \"Password\",\r\n              type: \"password\" },\r\n            \"remember\": {\r\n              label: \"Remember me\",\r\n              type: \"checkbox\" }\r\n          }}\r\n          name=\"signin\"\r\n          tBoxVariant=\"filled\"\r\n          button={\r\n            <React.Fragment key=\"spacing button\">\r\n              <Grid item xs>\r\n                <Spacing height={2}/>\r\n              </Grid>\r\n              <Grid container key=\"button\" alignItems=\"center\">\r\n                <Grid item xs={10}>\r\n                  <Link\r\n                    href=\"#\"\r\n                    onClick={e => {\r\n                      e.preventDefault();\r\n                      this.setState((state) => {\r\n                        return {page_index: 1};\r\n                      });\r\n                    }}>\r\n                    Register\r\n                  </Link> <br/>\r\n                  <Link href=\"#\">Reset Password</Link>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    fullWidth\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </React.Fragment>\r\n          }\r\n          ref={this.login_form}\r\n          onSubmit={handleLogin}\r\n        />\r\n        \r\n        <Grid item xs>\r\n          <Spacing height={3}/>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">\r\n            Or sign in with a third-party account:\r\n          </Typography>\r\n          <Spacing height={1}/>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Button\r\n            size=\"medium\"\r\n            variant=\"outlined\"\r\n            startIcon={<GoogleIcon />}\r\n            disabled\r\n          >\r\n            Sign in with Google\r\n          </Button>\r\n        </Grid>\r\n        \r\n      </Grid>\r\n    );\r\n    const register_page = (\r\n      <Grid\r\n        container\r\n        alignItems=\"flex-start\"\r\n        alignContent=\"center\"\r\n        justify=\"center\"\r\n        direction=\"column\"\r\n        spacing={1}\r\n      >\r\n        <Grid item xs><Typography variant=\"h5\">Register a new account</Typography></Grid>\r\n        <Grid item xs><Typography variant=\"body2\" color=\"textSecondary\">\r\n          We'll just need some personal information of yours.\r\n        </Typography></Grid>\r\n        <Grid item xs><Spacing height={1}/></Grid>\r\n        <QuickForm \r\n          fields={{\r\n            \"username\": {\r\n              label: \"Username\",\r\n              type: \"text\" },\r\n            \"email\": {\r\n              label: \"Email\",\r\n              type: \"email\" },\r\n            \"dob\": {\r\n              label: \"Date of Birth\",\r\n              type: \"date\" },\r\n            \"password\": {\r\n              label: \"Password\",\r\n              type: \"password\" },\r\n            \"re_password\": {\r\n              label: \"Re-enter Password\",\r\n              type: \"password\" },\r\n            \"tnc\": {\r\n              label: \"I have read and agree to the Terms & Conditions\",\r\n              type: \"checkbox\" }\r\n          }}\r\n          name=\"register\"\r\n          tBoxVariant=\"filled\"\r\n          button={\r\n            <React.Fragment key=\"spacing button\">\r\n              <Grid item xs>\r\n                <Spacing height={2}/>\r\n              </Grid>\r\n              <Grid container key=\"button\" alignItems=\"center\">\r\n                <Grid item xs={10}>\r\n                  <Link\r\n                    href=\"#\"\r\n                    onClick={e => {\r\n                      e.preventDefault();\r\n                      this.setState((state) => {\r\n                        return {page_index: 0};\r\n                      });\r\n                    }}\r\n                  >Already have an account? Login</Link>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    fullWidth\r\n                  >\r\n                    register\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </React.Fragment>\r\n          }\r\n          onSubmit={handleRegister}\r\n          ref={this.register_form}\r\n        />\r\n      </Grid>\r\n    );\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {this.state.page_index === 0 && login_page}\r\n        {this.state.page_index === 1 && register_page}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPanel;","import React from 'react';\r\nimport { Typography, Grid, Avatar, Link } from '@material-ui/core';\r\nimport { Spacing } from './../../components';\r\nimport './UserInfoPanel.scss';\r\n\r\n\r\nexport default function UserInfoPanel(props) {\r\n  /**\r\n   * The panel that displays the players info\r\n   */\r\n\r\n\r\n  const user = props.client.user;\r\n\r\n  return (\r\n    <div className=\"container-padded\">\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"flex-start\"\r\n        alignContent=\"flex-start\"\r\n        spacing={2}\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h4\">User Info</Typography>\r\n          <Spacing height={2} />\r\n        </Grid>\r\n\r\n        <Grid\r\n          container\r\n          item\r\n          direction=\"row\"\r\n          justify=\"space-between\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid\r\n            container\r\n            item xs={10}\r\n            direction=\"column\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"flex-start\"\r\n            spacing={2}\r\n          >\r\n            <Grid item xs>\r\n              <Typography variant=\"h6\">Username</Typography>\r\n              <Typography>{user.name}</Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs>\r\n              <Typography variant=\"h6\">User Type</Typography>\r\n              <Typography>{user.type}</Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs>\r\n              <Typography variant=\"h6\">Email</Typography>\r\n              <Typography>{user.email}</Typography>\r\n            </Grid>\r\n\r\n          </Grid>\r\n          \r\n\r\n          <Grid\r\n            container\r\n            item xs={2}\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            spacing={1}\r\n          >\r\n            <Grid item>\r\n              <Avatar src={user.avatar_url} alt={user.name} style={{height: \"5em\", width: \"5em\"}} />\r\n            </Grid>\r\n            <Grid item>\r\n              <Link>\r\n                Edit\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n        <Grid item>\r\n          <Typography variant=\"h6\">Birthday</Typography>\r\n          <Typography>{user.dob.format('MMMM Do, YYYY')}</Typography>\r\n        </Grid>\r\n\r\n        <Grid item>\r\n          <Typography variant=\"h6\">Chips</Typography>\r\n          <Typography>{`${user.balance}`}</Typography>\r\n        </Grid>\r\n\r\n        <Grid item>\r\n          <Typography variant=\"h6\">Wins / Losses / Total Games Played</Typography>\r\n          <Typography>{`${user.wins} / ${user.losses} / ${user.games_played}`}</Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React  from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n/*\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n*/\r\nimport Box from '@material-ui/core/Box';\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 250,\r\n    maxHeight: 350,\r\n  },\r\n  media: {\r\n    height: 340,\r\n  },\r\n});\r\n\r\n\r\nexport default function MatchCard(props) {\r\n  const classes = useStyles();\r\n  const [amounttobet] = React.useState('');\r\n  return (\r\n    <Card className={classes.root} >\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt={props.matchCard.title}\r\n          height=\"140\"\r\n          image=\"/cards.jpg\"\r\n          title={props.matchCard.title}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {props.matchCard.title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {props.matchCard.short_description}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n\r\n        <Box justifyContent=\"flex-end\">\r\n          <Box p={0} bgcolor=\"grey.300\">\r\n          <CardActions justifyContent = \"flex-end\">\r\n            <Button size=\"Medium\" color=\"primary\" justifyContent = \"flex-end\" onClick={() => { alert('playing ' + props.matchCard.title + ' with $'+ amounttobet + ' worth of chips') }}>\r\n              Play\r\n            </Button>\r\n          </CardActions>\r\n        </Box>\r\n        </Box>\r\n\r\n    </Card>\r\n  );\r\n}\r\n//\r\n/*\r\n        <InputLabel id=\"demo-simple-select-label\">Amount</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={amounttobet}\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n\r\n        <Button size=\"large\" color=\"primary\" onClick={() => { alert('playing ranked ' + props.matchCard.title + ' with $'+ amounttobet + ' worth of chips') }}>\r\n          Play Ranked\r\n        </Button>\r\n        */\r\n","import React from 'react';\r\n//import logo from './logo.svg';\r\nimport MatchCard from './MatchCard.js'\r\nimport {\r\n    Grid,\r\n    Typography\r\n} from '@material-ui/core/'\r\n\r\nclass MatchPanel extends React.Component {\r\n\r\n  state = {\r\n    matchCard:[\r\n      {\r\n        id:1,\r\n        title:'Texus Holdom',\r\n        description : 'Two cards, known as hole cards, are dealt face down to each player, and then five community cards are dealt face up in three stages. The stages consist of a series of three cards (\"the flop\"), later an additional single card (\"the turn\" or \"fourth street\"), and a final card (\"the river\" or \"fifth street\"). Each player seeks the best five card poker hand from any combination of the seven cards of the five community cards and their two hole cards. Players have betting options to check, call, raise, or fold.',\r\n        short_description: 'Two cards, known as hole cards, are dealt face down to each player, and then five community cards are dealt...',\r\n        amount: 5.99\r\n      },\r\n      {\r\n        id:2,\r\n        title:'Sample Game',\r\n        description : 'This is a sample game',\r\n        short_description : 'This is a sample game, This is a sample game, This is a sample game ,This is a sample game This is a sample game... ',\r\n        amount: 10.99\r\n      },\r\n      {\r\n        id:3,\r\n        title:'Sample Game',\r\n        description : 'This is a sample game',\r\n        short_description : 'This is a sample game, This is a sample game, This is a sample game ,This is a sample game This is a sample game... ',\r\n        amount: 20.99\r\n      }\r\n    ]\r\n  };\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"container-padded\" float = 'right'>\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"flex-start\"\r\n          alignItems=\"flex-start\"\r\n          alignContent=\"flex-start\"\r\n          spacing={4}\r\n        >\r\n          <Grid item><Typography variant=\"h4\">Match</Typography></Grid>\r\n          <Grid item container\r\n          justify=\"flex-end\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n          direction=\"row\">\r\n            {this.state.matchCard.map(elem => (\r\n              <Grid item xs={12} sm={4} md={4} key={this.state.matchCard.indexOf(elem)}>\r\n                <MatchCard matchCard = {this.state.matchCard[this.state.matchCard.indexOf(elem)]}> </MatchCard>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default MatchPanel;\r\n","import React  from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 250,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\n\r\nexport default function StoreCard(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root} >\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt={props.storeCard.title}\r\n          height=\"140\"\r\n          image=\"/chips.png\"\r\n          title={props.storeCard.title}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {props.storeCard.title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n            {props.storeCard.description}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <Box justifyContent=\"flex-end\">\r\n        <Box p={0} bgcolor=\"grey.300\">\r\n      <CardActions>\r\n\r\n        <Button size=\"large\" color=\"primary\" onClick={() => { alert(props.storeCard.description) }}>\r\n          More Info\r\n        </Button>\r\n        <Button size=\"large\" color=\"primary\" onClick={() => { alert('Paying '+ props.storeCard.amount) }}>\r\n          Purchase\r\n        </Button>\r\n\r\n      </CardActions>\r\n      </Box>\r\n    </Box>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\n//import logo from './logo.svg';\r\n\r\nimport StoreCard from './StoreCard.js'\r\nimport {\r\n    Grid, Typography,\r\n} from '@material-ui/core/'\r\n\r\nclass StorePanel extends React.Component{\r\n  state = {\r\n    StoreCard:[\r\n      {\r\n        id:1,\r\n        title:'Basic Purchase',\r\n        description : 'The minimum purchase, no discount',\r\n        amount: 5.99\r\n      },\r\n      {\r\n        id:2,\r\n        title:'Medium Purchase',\r\n        description : 'A small discount for spending more',\r\n        amount: 10.99\r\n      },\r\n      {\r\n        id:3,\r\n        title:'Large Purchase',\r\n        description : 'The largest discount available in a purchase',\r\n        amount: 20.99\r\n      }\r\n    ]\r\n  }\r\n  render() {\r\n    console.log(this.state.StoreCard);\r\n    return (\r\n      <div className=\"container-padded\" >\r\n        <Grid\r\n          container\r\n          direction=\"column\"\r\n          justify=\"flex-start\"\r\n          alignItems=\"flex-start\"\r\n          alignContent=\"flex-start\"\r\n          spacing={4}\r\n        >\r\n          <Grid item><Typography variant=\"h4\">Store</Typography></Grid>\r\n          <Grid item container spacing={2} direction=\"row\" justify=\"flex-end\" alignItems=\"flex-start\" >\r\n            {this.state.StoreCard.map(elem => (\r\n              <Grid item xs={16} sm={4} md={4} key={this.state.StoreCard.indexOf(elem)}>\r\n                <StoreCard storeCard = {this.state.StoreCard[this.state.StoreCard.indexOf(elem)]}> </StoreCard>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default StorePanel;\r\n","import moment from 'moment';\r\nimport axios from 'axios';\r\n\r\nfunction fakeAuth(auth) {\r\n  if (auth.username === \"name\" && auth.password === \"pass\") {\r\n    return {\r\n      id: \"1\",\r\n      username: \"name\",\r\n      type: 0,\r\n      email: \"email@email.com\",\r\n      dob: moment(\"August 1, 1980\"),\r\n      balance: 10000,\r\n      games_played: 10,\r\n      wins: 3,\r\n      losses: 7,\r\n      credit_cards: [1, 2, 3]\r\n    };\r\n  } else if (auth.username === \"admin\" && auth.password === \"pass\") {\r\n    return {\r\n      id: \"0\",\r\n      username: \"admin\",\r\n      type: 1,\r\n      email: \"email@email.com\",\r\n      dob: moment(\"July 1, 1900\"),\r\n      balance: 100,\r\n      games_played: 15,\r\n      wins: 10,\r\n      losses: 5,\r\n      credit_cards: []\r\n    };\r\n  } else{\r\n    return 404;\r\n  }\r\n}\r\n\r\nfunction fakeCreate(data) {\r\n  if (data.email === \"this@email.com\") {\r\n    return 1;\r\n  } else if (data.username === \"user\") {\r\n    return 2;\r\n  }\r\n  return 'userid-222222';\r\n}\r\n\r\nconst user_types = {\r\n  0: \"Regular User\",\r\n  1: \"Moderator\"\r\n}\r\n\r\n// pages: [login_register, match, store, leaderboard, news, management, user_info(always false)]\r\n\r\nconst display_array = {\r\n  9: [true, false, false, false, true, false, false],\r\n  0: [false, true, true, true, true, false, false],\r\n  1: [false, true, true, true, true, true, false]\r\n}\r\n\r\nclass User {\r\n  \r\n  constructor() {\r\n    this.userdata = {};\r\n    this.userdata.role = 9;\r\n  }\r\n\r\n  async login(auth) {\r\n    // @TODO: add real auth\r\n\r\n    const authdata = {\r\n      email: auth.username,\r\n      password: auth.password\r\n    }\r\n\r\n    return axios.post('/api/login', authdata)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n\r\n        const user_new = new User();\r\n        user_new.userdata = res.data;\r\n\r\n        return user_new;\r\n      }).catch((err) => {\r\n        throw new Error(\"Incorrect username & password combination.\")\r\n      })\r\n\r\n    \r\n  }\r\n\r\n  async create(data) {\r\n    // @TODO: add real create\r\n    axios.post('/api/check_email', {email: data.email})\r\n      .then((res) => {\r\n        throw new Error('email-duplicate');\r\n      }).catch((err) => {});\r\n\r\n\r\n    //else if (result === 2) {\r\n      //throw new Error(\"username-duplicate\");\r\n    //}\r\n\r\n    return axios.post('/api/signup', {\r\n      email: data.email,\r\n      password: data.password,\r\n      name: data.username,\r\n      dob: data.dob.toDate()\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n\r\n        const user_new = new User();\r\n        user_new.userdata = {\r\n          email: data.email,\r\n          name: data.username,\r\n          dob: data.dob.toDate(),\r\n          role: 0,\r\n          balance: 0,\r\n          games_played: 0,\r\n          wins: 0,\r\n          losses: 0,\r\n        };\r\n\r\n        return user_new;\r\n      }).catch((err) => {throw err;})\r\n\r\n  }\r\n\r\n  async logout() {\r\n    // @TODO: add real logout\r\n\r\n    return axios.get('/api/logout')\r\n      .then((res) => {\r\n        return new User();\r\n      });\r\n  }\r\n\r\n  // getters --------------------------\r\n  // avatar link: https://postimg.cc/3yXpjKCC\r\n\r\n  get avatar_url() { return 'https://i.postimg.cc/0N3fsjz3/IMGBIN-giant-panda-dog-cat-avatar-png-Gus-CAj6v.png'; }\r\n  get name() { return this.userdata.name; }\r\n  get id() { return '0'; }\r\n  get raw_type() { return this.userdata.role; }\r\n  get type() { return user_types[this.userdata.role]; }\r\n  get email() { return this.userdata.email;}\r\n  get dob() { return moment(this.userdata.dob); }\r\n  get balance() { return this.userdata.balance }\r\n  get games_played() { return this.userdata.games_played }\r\n  get wins() { return this.userdata.wins }\r\n  get losses() { return this.userdata.losses }\r\n  get display_setting() { return display_array[this.userdata.role]; }\r\n\r\n}\r\n\r\nexport default User;","/* Global theme for material ui */\r\n\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { teal, pink } from \"@material-ui/core/colors\";\r\n\r\n\r\n\r\nconst Theme = createMuiTheme({\r\n  palette: {\r\n    type: 'light',\r\n    primary: teal,\r\n    secondary: pink,\r\n    background: {\r\n      default: \"#4B4B4B\"\r\n    }\r\n  }\r\n});\r\n\r\n\r\nexport { Theme };\r\n\r\n","import React from 'react';\r\n\r\nimport { LoginPanel,\r\n  Navigator,\r\n  UserInfoPanel,\r\n  MatchPanel,\r\n  StorePanel,\r\n  LeaderBoardPanel,\r\n  NewsPanel\r\n} from './views';\r\nimport { User } from './models';\r\nimport { CssBaseline, Typography } from \"@material-ui/core\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { Theme } from './theme';\r\nimport './global.scss'\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.navigator = React.createRef();\r\n\r\n    let user = new User();\r\n    this.state = {\r\n      user: user\r\n    };\r\n  }\r\n\r\n  get user() {\r\n    return this.state.user;\r\n  }\r\n\r\n  async auth(data, create=false) {\r\n    /**\r\n     * try auth the user with the given data\r\n     * throws error if auth failed\r\n     */\r\n\r\n    try {\r\n      var logged_user;\r\n\r\n      if (create) {\r\n        logged_user = await this.state.user.create(data);\r\n      } else {\r\n        logged_user = await this.state.user.login(data);\r\n      }\r\n\r\n      this.setState((state) => {\r\n        return {user: logged_user};\r\n      });\r\n\r\n      console.log(logged_user);\r\n      this.navigator.current.setDisplay(logged_user.display_setting, 1);\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n    \r\n  }\r\n\r\n  async logout() {\r\n    /**\r\n     * logs out the logged in user\r\n     */\r\n    \r\n    const empty_user = await this.user.logout();\r\n    this.setState((state) => {\r\n      return {user: empty_user};\r\n    });\r\n    this.navigator.current.setDisplay(empty_user.display_setting, 0);\r\n  }\r\n\r\n  render() {\r\n    // pages: [login_register, match, store, leaderboard, news, management, user_info(always false)]\r\n\r\n    const list = {\r\n      'login / register': <LoginPanel client={this} />,\r\n      'match': <MatchPanel client={this} />,\r\n      'store': <StorePanel client={this} />,\r\n      'leaderboard': <LeaderBoardPanel client={this} />,\r\n      'news': <NewsPanel client={this} />,\r\n      'management': <Typography>Management</Typography>,\r\n      'user info': <UserInfoPanel client={this} />,\r\n    };\r\n\r\n    return (\r\n      <ThemeProvider theme={Theme}>\r\n      <CssBaseline />\r\n        <Navigator list={list} client={this} ref={this.navigator} />\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grey\":\"#a8a8a8\"};"],"sourceRoot":""}