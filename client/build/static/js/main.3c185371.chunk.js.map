{"version":3,"sources":["PotatosComponents/StoreComponents/chips.png","PotatosComponents/MatchComponents/cards.jpg","components/DarkContainer/DarkContainer.js","components/LightContainer/LightContainer.js","views/MainPanel/MainPanel.js","theme.js","PotatosComponents/StoreComponents/StoreCard.js","PotatosComponents/StoreComponents/Store.js","PotatosComponents/MatchComponents/MatchCard.js","PotatosComponents/MatchComponents/Match.js","PotatosComponents/Management.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","root","backgroundColor","padding","height","DarkContainer","props","classes","Paper","elevation","style","children","color","LightContainer","React","Component","createMuiTheme","palette","type","primary","teal","secondary","pink","background","default","maxWidth","media","StoreCard","Card","className","CardActionArea","CardMedia","component","alt","storeCard","title","image","Chips","CardContent","Typography","gutterBottom","variant","description","Box","justifyContent","p","bgcolor","CardActions","Button","size","onClick","alert","amount","Store","state","id","console","log","this","Grid","container","spacing","direction","justify","alignItems","map","elem","item","xs","sm","md","key","indexOf","maxHeight","MatchCard","useState","amounttobet","matchCard","Cards","short_description","Match","float","useStyles1","theme","createStyles","flexShrink","marginLeft","Management","useTheme","count","page","rowsPerPage","onChangePage","IconButton","event","disabled","aria-label","Math","ceil","max","rows","name","case_description","time","ReportID","useStyles2","table","minWidth","CustomPaginationManagement","setPage","setRowsPerPage","emptyRows","min","length","TableContainer","Table","TableBody","slice","row","TableRow","TableCell","width","align","scope","class","colSpan","TableFooter","TablePagination","rowsPerPageOptions","label","value","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","target","ActionsComponent","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3c185371.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chips.ae0f8942.png\";","module.exports = __webpack_public_path__ + \"static/media/cards.45b324a3.jpg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: '#000000',\r\n    padding: \"40px\",\r\n    height: \"100%\"\r\n  }\r\n});\r\n\r\nexport default function DarkContainer(props) {\r\n  /* A dark variant of the <Paper> component*/\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper\r\n      classes={{root: classes.root}}\r\n      elevation={1 | props.elevation}\r\n      style={props.style}\r\n    >\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: '#FFFFFF',\r\n    color: '#000000',\r\n    padding: \"40px\",\r\n    height: \"100%\"\r\n  }\r\n});\r\n\r\nexport default function LightContainer(props) {\r\n  /* A light variant of the <Paper> component*/\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper\r\n      classes={{root: classes.root}}\r\n      elevation={1 | props.elevation}\r\n      style={props.style}\r\n    >\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n","\r\nimport React from 'react';\r\nimport { DarkContainer, LightContainer } from './../../components';\r\nimport { Typography } from '@material-ui/core';\r\nimport './MainPanel.scss'\r\n\r\nclass MainPanel extends React.Component {\r\n  /* The panel player sees when they enter the website */\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"PanelContainer main\">\r\n        <div className=\"PanelContainer left\">\r\n        <DarkContainer style={{borderRadius: \"4px 0 0 4px\"}}>\r\n          <Typography>Sample Text</Typography>\r\n        </DarkContainer>\r\n        </div>\r\n        <div className=\"PanelContainer right\">\r\n        <LightContainer style={{borderRadius: \"0 4px 4px 0\"}}>\r\n          <Typography>Sample Text</Typography>\r\n        </LightContainer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPanel;\r\n","/* Global theme for material ui */\r\n\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport teal from \"@material-ui/core/colors/teal\";\r\nimport pink from \"@material-ui/core/colors/pink\";\r\n\r\nconst Theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    primary: teal,\r\n    secondary: pink,\r\n    background: {\r\n      default: \"#4B4B4B\"\r\n    }\r\n  }\r\n});\r\n\r\nexport { Theme };\r\n","import React  from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Chips from './chips.png';\r\nimport Box from '@material-ui/core/Box';\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 250,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\n\r\nexport default function StoreCard(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root} >\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt={props.storeCard.title}\r\n          height=\"140\"\r\n          image={Chips}\r\n          title={props.storeCard.title}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {props.storeCard.title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\r\n            {props.storeCard.description}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <Box justifyContent=\"flex-end\">\r\n        <Box p={0} bgcolor=\"grey.300\">\r\n      <CardActions>\r\n\r\n        <Button size=\"large\" color=\"primary\" onClick={() => { alert(props.storeCard.description) }}>\r\n          More Info\r\n        </Button>\r\n        <Button size=\"large\" color=\"primary\" onClick={() => { alert('Paying '+ props.storeCard.amount) }}>\r\n          Purchase\r\n        </Button>\r\n\r\n      </CardActions>\r\n      </Box>\r\n    </Box>\r\n    </Card>\r\n  );\r\n}\r\n","import React from 'react';\r\n//import logo from './logo.svg';\r\n\r\n\r\nimport StoreCard from './StoreCard.js'\r\nimport {\r\n    Grid,\r\n} from '@material-ui/core/'\r\nclass Store extends React.Component{\r\n  state = {\r\n    StoreCard:[\r\n      {\r\n        id:1,\r\n        title:'Basic Purchase',\r\n        description : 'The minimum purchase, no discount',\r\n        amount: 5.99\r\n      },\r\n      {\r\n        id:2,\r\n        title:'Medium Purchase',\r\n        description : 'A small discount for spending more',\r\n        amount: 10.99\r\n      },\r\n      {\r\n        id:3,\r\n        title:'Large Purchase',\r\n        description : 'The largest discount available in a purchase',\r\n        amount: 20.99\r\n      }\r\n    ]\r\n  }\r\n  render() {\r\n    console.log(this.state.StoreCard);\r\n    return (\r\n      <div className=\"Store\" >\r\n        <header className=\"App-header\">\r\n          <Grid container spacing={2} direction=\"row\" justify=\"flex-end\" alignItems=\"flex-start\" >\r\n            {this.state.StoreCard.map(elem => (\r\n              <Grid item xs={16} sm={4} md={4} key={this.state.StoreCard.indexOf(elem)}>\r\n                <StoreCard storeCard = {this.state.StoreCard[this.state.StoreCard.indexOf(elem)]}> </StoreCard>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </header>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Store;\r\n","import React  from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Cards from './cards.jpg';\r\n/*\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n*/\r\nimport Box from '@material-ui/core/Box';\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 250,\r\n    maxHeight: 350,\r\n  },\r\n  media: {\r\n    height: 340,\r\n  },\r\n});\r\n\r\n\r\nexport default function MatchCard(props) {\r\n  const classes = useStyles();\r\n  const [amounttobet] = React.useState('');\r\n  return (\r\n    <Card className={classes.root} >\r\n      <CardActionArea>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt={props.matchCard.title}\r\n          height=\"140\"\r\n          image={Cards}\r\n          title={props.matchCard.title}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {props.matchCard.title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {props.matchCard.short_description}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n\r\n        <Box justifyContent=\"flex-end\">\r\n          <Box p={0} bgcolor=\"grey.300\">\r\n          <CardActions justifyContent = \"flex-end\">\r\n            <Button size=\"Medium\" color=\"primary\" justifyContent = \"flex-end\" onClick={() => { alert('playing ' + props.matchCard.title + ' with $'+ amounttobet + ' worth of chips') }}>\r\n              Play\r\n            </Button>\r\n          </CardActions>\r\n        </Box>\r\n        </Box>\r\n\r\n    </Card>\r\n  );\r\n}\r\n//\r\n/*\r\n        <InputLabel id=\"demo-simple-select-label\">Amount</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={amounttobet}\r\n          onChange={handleChange}\r\n        >\r\n          <MenuItem value={10}>Ten</MenuItem>\r\n          <MenuItem value={20}>Twenty</MenuItem>\r\n          <MenuItem value={30}>Thirty</MenuItem>\r\n        </Select>\r\n\r\n        <Button size=\"large\" color=\"primary\" onClick={() => { alert('playing ranked ' + props.matchCard.title + ' with $'+ amounttobet + ' worth of chips') }}>\r\n          Play Ranked\r\n        </Button>\r\n        */\r\n","import React from 'react';\r\n//import logo from './logo.svg';\r\nimport MatchCard from './MatchCard.js'\r\nimport {\r\n    Grid,\r\n} from '@material-ui/core/'\r\nclass Match extends React.Component{\r\n\r\n  state = {\r\n    matchCard:[\r\n      {\r\n        id:1,\r\n        title:'Texus Holdom',\r\n        description : 'Two cards, known as hole cards, are dealt face down to each player, and then five community cards are dealt face up in three stages. The stages consist of a series of three cards (\"the flop\"), later an additional single card (\"the turn\" or \"fourth street\"), and a final card (\"the river\" or \"fifth street\"). Each player seeks the best five card poker hand from any combination of the seven cards of the five community cards and their two hole cards. Players have betting options to check, call, raise, or fold.',\r\n        short_description: 'Two cards, known as hole cards, are dealt face down to each player, and then five community cards are dealt...',\r\n        amount: 5.99\r\n      },\r\n      {\r\n        id:2,\r\n        title:'Sample Game',\r\n        description : 'This is a sample game',\r\n        short_description : 'This is a sample game, This is a sample game, This is a sample game ,This is a sample game This is a sample game... ',\r\n        amount: 10.99\r\n      },\r\n      {\r\n        id:3,\r\n        title:'Sample Game',\r\n        description : 'This is a sample game',\r\n        short_description : 'This is a sample game, This is a sample game, This is a sample game ,This is a sample game This is a sample game... ',\r\n        amount: 20.99\r\n      }\r\n    ]\r\n  };\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"Match\" float = 'right'>\r\n      <header className=\"App-header\" float = 'right'>\r\n      <Grid container\r\n      justify=\"flex-end\"\r\n      alignItems=\"center\"\r\n      spacing={2}\r\n      direction=\"row\">\r\n        {this.state.matchCard.map(elem => (\r\n          <Grid item xs={12} sm={4} md={4} key={this.state.matchCard.indexOf(elem)}>\r\n            <MatchCard matchCard = {this.state.matchCard[this.state.matchCard.indexOf(elem)]}> </MatchCard>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      </header>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\n\r\n\r\nexport default Match;\r\n","import React from 'react';\r\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport Button from '@material-ui/core/Button';\r\nconst useStyles1 = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexShrink: 0,\r\n      marginLeft: theme.spacing(2.5),\r\n    },\r\n  }),\r\n);\r\n\r\ninterface ManagementProps {\r\n  count: number;\r\n  page: number;\r\n  rowsPerPage: number;\r\n  onChangePage: (event: React.MouseEvent<HTMLButtonElement>, newPage: number) => void;\r\n}\r\n\r\nfunction Management(props: ManagementProps) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction handleListItemClick(ReportID) {\r\n  alert('Viewing ReportID: '+ ReportID)\r\n}\r\n\r\nconst rows = [\r\n  {name : 'Sample UserName 1', case_description: 'Sample Report Detail filled by user 1', time: '3:07', ReportID: 1000.0},\r\n  {name : 'Sample UserName 2', case_description: 'Sample Report Detail filled by user 2', time:  '3:07', ReportID: 1001.0},\r\n  {name : 'Sample UserName 3', case_description: 'Sample Report Detail filled by user 3', time: '3:07', ReportID: 1002.0},\r\n  {name : 'Sample UserName 4', case_description: 'Sample Report Detail filled by user 4', time: '3:07', ReportID: 1003.0},\r\n  {name : 'Sample UserName 5', case_description: 'Sample Report Detail filled by user 5', time: '3:07', ReportID: 1004.0},\r\n  {name : 'Sample UserName 6', case_description: 'Sample Report Detail filled by user 6', time: '3:07', ReportID: 1005.0},\r\n  {name : 'Sample UserName 7', case_description: 'Sample Report Detail filled by user 7', time: '3:07', ReportID: 1006.0},\r\n  {name : 'Sample UserName 8', case_description: 'Sample Report Detail filled by user 8', time: '3:07', ReportID: 1007.0},\r\n  {name : 'Sample UserName 9', case_description: 'Sample Report Detail filled by user 9', time: '3:07', ReportID: 1008.0},\r\n  {name : 'Sample UserName 10', case_description: 'Sample Report Detail filled by user 10', time: '3:07', ReportID: 1009.0},\r\n  {name : 'Sample UserName 11', case_description: 'Sample Report Detail filled by user 11', time: '3:07', ReportID: 1010.0},\r\n  {name : 'Sample UserName 12', case_description: 'Sample Report Detail filled by user 12', time: '3:07', ReportID: 1011.0},\r\n  {name : 'Sample UserName 13', case_description: 'Sample Report Detail filled by user 13', time: '3:07', ReportID: 1012.0},\r\n  {name : 'Sample UserName 14', case_description: 'Sample Report Detail filled by user 14', time: '3:07', ReportID: 1013.0},\r\n  {name : 'Sample UserName 15', case_description: 'Sample Report Detail filled by user 15', time: '3:07', ReportID: 1014.0},\r\n  {name : 'Sample UserName 16', case_description: 'Sample Report Detail filled by user 16', time: '3:07', ReportID: 1015.0},\r\n];\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n});\r\n\r\nexport default function CustomPaginationManagement() {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n  const handleChangePage = (event: React.MouseEvent<HTMLButtonElement> | null, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (\r\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n  ) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"custom pagination table\">\r\n        <TableBody>\r\n          {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows\r\n          ).map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell style={{ width: 180 }} align=\"right\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.case_description}\r\n              </TableCell>\r\n              <TableCell style={{ width: 60 }} align=\"right\">\r\n                {row.time}\r\n              </TableCell>\r\n              <TableCell><Button size=\"large\" variant=\"outlined\" color=\"Primary\"class=\"editbtn\" onClick={(event) => handleListItemClick(row.ReportID)}>More Details </Button></TableCell>\r\n            </TableRow>\r\n          ))}\r\n          {emptyRows > 0 && (\r\n            <TableRow style={{ height: 53 * emptyRows }}>\r\n              <TableCell colSpan={6} />\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, 100, { label: 'All', value: -1 }]}\r\n              colSpan={3}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={Management}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { MainPanel } from './views';\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { Theme } from './theme';\r\nimport Store from './PotatosComponents/StoreComponents/Store.js'\r\nimport Match from './PotatosComponents/MatchComponents/Match.js'\r\nimport Management from './PotatosComponents/Management.js'\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\" >\r\n      <header>\r\n        <Store></Store>\r\n        <br></br>\r\n        <Match></Match>\r\n        <br></br>\r\n        <Management></Management>\r\n        <br></br>\r\n      </header>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}